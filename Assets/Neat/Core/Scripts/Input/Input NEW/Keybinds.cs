//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.1
//     from Assets/Neat/Core/Scripts/Input/Input NEW/Keybinds.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Keybinds : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Keybinds()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Keybinds"",
    ""maps"": [
        {
            ""name"": ""FPS"",
            ""id"": ""9652d8cb-1860-4fbd-bba1-ce532e15038c"",
            ""actions"": [
                {
                    ""name"": ""Look"",
                    ""type"": ""Value"",
                    ""id"": ""4480b8dc-51fd-4607-9793-3f7c7c4a8239"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""ff7eb63e-60b6-474e-9613-718b4acf7faa"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Move3D"",
                    ""type"": ""Value"",
                    ""id"": ""bbe15bd0-63f8-4a58-8d37-6e02989b4e4d"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""7393a775-a61c-47c4-b5a3-1f724399da65"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WalkRun"",
                    ""type"": ""Button"",
                    ""id"": ""ebada1e6-6e35-4473-aa38-da5e77bbecd4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PrimaryFire"",
                    ""type"": ""Button"",
                    ""id"": ""5f6f3095-646d-477f-a87e-4fc26ed3549b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""AltFire"",
                    ""type"": ""Button"",
                    ""id"": ""2fc9941c-9305-4f63-b5b5-a79ce8e45400"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Reload"",
                    ""type"": ""Button"",
                    ""id"": ""8e1ddadd-3440-4423-b4dd-0209b0c71c13"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""67a83085-7009-4ee3-b937-067530cf4cbd"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""91e076b6-b26d-4ea8-ac1c-0a88a0fc2f51"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""b35eba57-c4ac-40e0-b138-38ea196e6019"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7b9ec223-969e-4eb6-bd88-5b786fc4942e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""15ce4a26-327f-4e03-a722-ab82defe207a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""68f4bcb2-d2c4-49a9-8d14-684c99654eb1"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""LeftStick"",
                    ""id"": ""d78daabf-ca93-442b-9ae2-8c8c1442ce36"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""84702621-a559-4546-bba3-0d772efd48ab"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""efd07c7d-c4f8-433a-b610-84a2f3c4c7d8"",
                    ""path"": ""<Gamepad>/leftStick/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1dcf3d7c-b8d7-406f-a8e5-ed3737d30b9b"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c1b7b22f-b67d-4d41-adca-4b3731a3807b"",
                    ""path"": ""<Gamepad>/leftStick/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""e014f03a-e50a-4944-971f-fe8c1f78fb4d"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""eeb4dfd3-145e-4bb1-aa4c-727ba8c1b328"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""WalkRun"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD_plus"",
                    ""id"": ""311bd6c8-a9af-4a70-99d3-28c60e20b1d4"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector3"",
                    ""groups"": """",
                    ""action"": ""Move3D"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""27d8cbe9-c808-4343-a01a-9cb1e02b2122"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Move3D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""571fc59c-5918-4664-9a82-74061c729db3"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Move3D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""d5f98381-862d-4c5e-a0ab-7c9a7e2bdf1d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Move3D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""c40fb8aa-5eba-4f75-beef-2cbf452b9c41"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Move3D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Forward"",
                    ""id"": ""ef8cd288-5616-458d-bade-8c92c7ce0e73"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move3D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Backward"",
                    ""id"": ""26c36f64-9952-436e-b548-8da95a1e37dd"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move3D"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""b4062dc4-ab1c-425f-9eaf-1e12f7626031"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""PrimaryFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8d169401-2b5f-4748-8340-83325d2fdc52"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""AltFire"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be0f3eaf-1188-49c3-b6ef-03195010fa0e"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""FPS Control Scheme"",
                    ""action"": ""Reload"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""FPS Control Scheme"",
            ""bindingGroup"": ""FPS Control Scheme"",
            ""devices"": []
        }
    ]
}");
        // FPS
        m_FPS = asset.FindActionMap("FPS", throwIfNotFound: true);
        m_FPS_Look = m_FPS.FindAction("Look", throwIfNotFound: true);
        m_FPS_Move = m_FPS.FindAction("Move", throwIfNotFound: true);
        m_FPS_Move3D = m_FPS.FindAction("Move3D", throwIfNotFound: true);
        m_FPS_Jump = m_FPS.FindAction("Jump", throwIfNotFound: true);
        m_FPS_WalkRun = m_FPS.FindAction("WalkRun", throwIfNotFound: true);
        m_FPS_PrimaryFire = m_FPS.FindAction("PrimaryFire", throwIfNotFound: true);
        m_FPS_AltFire = m_FPS.FindAction("AltFire", throwIfNotFound: true);
        m_FPS_Reload = m_FPS.FindAction("Reload", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // FPS
    private readonly InputActionMap m_FPS;
    private IFPSActions m_FPSActionsCallbackInterface;
    private readonly InputAction m_FPS_Look;
    private readonly InputAction m_FPS_Move;
    private readonly InputAction m_FPS_Move3D;
    private readonly InputAction m_FPS_Jump;
    private readonly InputAction m_FPS_WalkRun;
    private readonly InputAction m_FPS_PrimaryFire;
    private readonly InputAction m_FPS_AltFire;
    private readonly InputAction m_FPS_Reload;
    public struct FPSActions
    {
        private @Keybinds m_Wrapper;
        public FPSActions(@Keybinds wrapper) { m_Wrapper = wrapper; }
        public InputAction @Look => m_Wrapper.m_FPS_Look;
        public InputAction @Move => m_Wrapper.m_FPS_Move;
        public InputAction @Move3D => m_Wrapper.m_FPS_Move3D;
        public InputAction @Jump => m_Wrapper.m_FPS_Jump;
        public InputAction @WalkRun => m_Wrapper.m_FPS_WalkRun;
        public InputAction @PrimaryFire => m_Wrapper.m_FPS_PrimaryFire;
        public InputAction @AltFire => m_Wrapper.m_FPS_AltFire;
        public InputAction @Reload => m_Wrapper.m_FPS_Reload;
        public InputActionMap Get() { return m_Wrapper.m_FPS; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(FPSActions set) { return set.Get(); }
        public void SetCallbacks(IFPSActions instance)
        {
            if (m_Wrapper.m_FPSActionsCallbackInterface != null)
            {
                @Look.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnLook;
                @Move.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnMove;
                @Move3D.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnMove3D;
                @Move3D.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnMove3D;
                @Move3D.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnMove3D;
                @Jump.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnJump;
                @WalkRun.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnWalkRun;
                @WalkRun.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnWalkRun;
                @WalkRun.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnWalkRun;
                @PrimaryFire.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnPrimaryFire;
                @PrimaryFire.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnPrimaryFire;
                @PrimaryFire.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnPrimaryFire;
                @AltFire.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnAltFire;
                @AltFire.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnAltFire;
                @AltFire.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnAltFire;
                @Reload.started -= m_Wrapper.m_FPSActionsCallbackInterface.OnReload;
                @Reload.performed -= m_Wrapper.m_FPSActionsCallbackInterface.OnReload;
                @Reload.canceled -= m_Wrapper.m_FPSActionsCallbackInterface.OnReload;
            }
            m_Wrapper.m_FPSActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Move3D.started += instance.OnMove3D;
                @Move3D.performed += instance.OnMove3D;
                @Move3D.canceled += instance.OnMove3D;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @WalkRun.started += instance.OnWalkRun;
                @WalkRun.performed += instance.OnWalkRun;
                @WalkRun.canceled += instance.OnWalkRun;
                @PrimaryFire.started += instance.OnPrimaryFire;
                @PrimaryFire.performed += instance.OnPrimaryFire;
                @PrimaryFire.canceled += instance.OnPrimaryFire;
                @AltFire.started += instance.OnAltFire;
                @AltFire.performed += instance.OnAltFire;
                @AltFire.canceled += instance.OnAltFire;
                @Reload.started += instance.OnReload;
                @Reload.performed += instance.OnReload;
                @Reload.canceled += instance.OnReload;
            }
        }
    }
    public FPSActions @FPS => new FPSActions(this);
    private int m_FPSControlSchemeSchemeIndex = -1;
    public InputControlScheme FPSControlSchemeScheme
    {
        get
        {
            if (m_FPSControlSchemeSchemeIndex == -1) m_FPSControlSchemeSchemeIndex = asset.FindControlSchemeIndex("FPS Control Scheme");
            return asset.controlSchemes[m_FPSControlSchemeSchemeIndex];
        }
    }
    public interface IFPSActions
    {
        void OnLook(InputAction.CallbackContext context);
        void OnMove(InputAction.CallbackContext context);
        void OnMove3D(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnWalkRun(InputAction.CallbackContext context);
        void OnPrimaryFire(InputAction.CallbackContext context);
        void OnAltFire(InputAction.CallbackContext context);
        void OnReload(InputAction.CallbackContext context);
    }
}
